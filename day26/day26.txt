네트워크상으로 떨어진 통신주체가
데이터를 교환하기 위해서는 사전에
정해진 약속이 필요하다.
이러한 약속을 프로로콜이라 한다.

ex) requestType =chat|purchase
&id=batman&product_id=23....
이어서 하고싶을때 & 넣기

문자열을 해석하는 방법이 너무 개발자 의존적이다..
data.split("&").split("=");
//데이터와 데이터를 & 로 나눴다

그래서 더 편한 두가지 방법 
XML, JSON

XML-HTML 둘의 공통점?
마크업 언어

차이점
HTML - how to show..
	문서가 어떻게 보여질지 결정하는데
	중점을 둔다..

XML - how to make information
	문서를 이용해서 어떻게 데이터화 시킬지를 결정
	즉 데이터를 어떻게 표현할지에 중점을 둔다..

JSON - JavaScript Object Notation
	자바스크립트로 현실의 객체개념을
	표현한 표기법

JSON is a syntax for storing and exchanging data.
제이슨은 데이터의 교환과 적재를 위함
JSON is text, written with JavaScript object notation.
제이슨은 문자열이면서, 자바스크립트 표기를 위함

/*JSON 은 자바스크립트 객체이므로,
당연히 자바스크립트 코드 내에서 작성해야 함
평상시에 작성한 거푸집 목적의 자바스크립트
클래스와는 목적이 틀리다..
즉 재사용성을 염두해둔 클래스가 아니라,
데이터를 담고 전달하기 위한 dto 목적으로
보아야 한다.. 따라서 아래의 객체는 클래스보다는
인스턴스로 보아야 한다..
아래의 문서는 인스턴스 하나로 본다,
재사용성 없는 하나의 객체
문자 , 숫자 , 논리값을 통해
자바처럼 속성을 표현할수 있다*/
var member={
	"name" : "이긍열",
	"age" : 23,
	"gender" : "남",
	"married" : false
}

alert(member.name);

//JSON 으로 데이터를 구성하면 이 데이터에 대한
//해석은 객체 지향 스타일로 처리가 가능하다
//문자를 나눠서, 구분하는 방법을 써야하는 프로토콜보다는
//변수를 이용할 수 있는 JSON 표기법이 편리하다..

XML stands for eXtensible Markup Language.
XML은 마크업언어 표준이다
XML was designed to store and transport data.
XML 은 저장하거나 , 전달하기 위해 설계되었다
XML was designed to be both human- and machine-readable.
XML 은 사람도, 기계도 해석할 수 있게 설계되었다

*자바에 비유하자면,

<?xml version="1.0" encoding="UTF-8"?>
<note> - 클래스 
  <to>Tove</to> - 멤버변수 (속성)
  <from>Jani</from> - 멤버변수 (속성)
  <heading>Reminder</heading> - 멤버변수 (속성)
  <body>Don't forget me this weekend!</body> - 멤버변수 (속성)
</note>

--
<breakfast_menu> - 클래스들을 담은 ArrayList (컬렉션프레임웍)
<food> - 클래스
    <name>Belgian Waffles</name> -String 형
    <price>$5.95</price> - int 형
    <description> -String 형
   Two of our famous Belgian Waffles with plenty of real maple syrup
   </description> -String 형
    <calories>650</calories> - int 형 멤버변수
</food>
<food>
    <name>Strawberry Belgian Waffles</name>
    <price>$7.95</price>
    <description>
    Light Belgian waffles covered with strawberries and whipped cream
    </description>
    <calories>900</calories>
</food>
<food>
    <name>Berry-Berry Belgian Waffles</name>
    <price>$8.95</price>
    <description>
    Belgian waffles covered with assorted fresh berries and whipped cream
    </description>
    <calories>900</calories>
</food>
<food>
    <name>French Toast</name>
    <price>$4.50</price>
    <description>
    Thick slices made from our homemade sourdough bread
    </description>
    <calories>600</calories>
</food>
<food>
    <name>Homestyle Breakfast</name>
    <price>$6.95</price>
    <description>
    Two eggs, bacon or sausage, toast, and our ever-popular hash browns
    </description>
    <calories>950</calories>
</food>
</breakfast_menu>
----------------------------------------------------
xml 실습 - 데이터를 전달하기 위해 사용되는 데이터 언어
-버젼과, 인코딩속성 적음
-xml이 html 보다 까다롭다, 대소문자 구분한다.
-xml 은 우리가 만들어낸 태그 - 사용자정의 태그라 부른다
-members 안에 member 를 존재시켰다 
-xml - 태그
-데이터베이스 - 테이블

--재사용성이 필요없으니 , function 이라는 클래스 표현은 필요없다..

var restaurant={ 
	"name":"만리장성",
	"location":"신촌",
	"menus":[
		{"name":"자장면"
			,"price":6000
			},
		{"name":"초밥"
			,"price":6000
			},
		{"name":"탕수육"
			,"price":5000
			}
	]
}

alert(restaurant.name);
--그러나 객체의 변수가 있는 이유는 이와같이 최소한의 가리키기 위함

앞으로 수업시간에 parse 라고 하면?
Parsing 
Parse - 구문해석, 구문을 분석하여 의미있는
	데이터를 추출하는 과정
뭐에 써먹을까? 그거는 써먹는 사람의 선택..

xml 은 parse 가 알아서 에러를 찾아준다
JSON 은? 어떻게 할까?

json validator : 제이슨이 제대로 되었는지 검증해준다
http://jsonlint.com/ 여기에서 한다.
** 검증할 때는 변수명 제외하고
{} 안의 데이터만 넣어서 해본다!!

-------이제 자바로 JSON 을 제어하는 방법을 배워보자----------


maven repository 검색
https://mvnrepository.com/ 들어가서 json 검색
JSON.simple 클릭 - 최신버젼 1.1.1 다운로드 받자
--다운받은게 바로 JSON Parser 다..


--채팅할때 JSON 사용, 통신프로토콜 만들자--
--끝날 때에는 parsing 필수--

섹시스타가 선전해서 유명한 향수아님??