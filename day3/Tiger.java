/*
new 연산자 뒤에 언제나 호출해야하는 메서드를
생성자 메서드라 한다..
생성자 메서드의 역할은?
- 객체의 인스턴스 생성 시 개발자로 하여금
  초기화의 기회를 준것이다!!
*/
class Tiger{
	String name="호랑이";
	
	//Tiger 클래스의 생성자를 정의한다 !! (초기화 코딩)
	//'생성자'를 사용하는 이유?
	//일반 데이터가 아니라, 적어도 사물을 생성
	//한다는 것은 상당히 복잡하다..
	//따라서 객체가 생성되는 시점에 개발자가 원하는
	//스타일의 객체에 대한 초기화의 기회를 
	//주기위해 sun에서는 new 연산자 뒤에
	//'생성자'라는 이름으로 불리는 메서드를 무조건 호출해놓았다!!
	//개발자가 생성자를 만들지 않아도 에러가 나지 않게..
	//sun사가 만들어놓았다 최소의 관여를 통해
	//생성자는 new 연산자 뒤에서 호출을 강제하기 때문에 존재하지 않을 경우
	//에러가 발생하게 되어있다..
	//이 문제를 해결하기 위해서 sun에서는 개발자가 생성자의 초기화 의도가
	//없는경우, "디폴드 생성자"를 자동으로 넣어준다!!
	public String Tiger(){
		System.out.println("디폴트 생성자 호출");
		return "어흥";
	}

	public static void main(String[] args){
		int a=3;
		Tiger t1= new Tiger();
		//오늘 시점부터 개발자가 "초기화"라는 코딩을 하는 것을 배워보자
				
	}
}
