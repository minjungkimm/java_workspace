복습시작-------------------------------------------

상속

--------------------------------------------------
객체도 자료형이다
자료형이라면, 객체간에 형변환의 원칙이 적용되어 질 수 있다

형변환이라 하면 기본자료형간의 비슷한 자료형이라면 가능했는데
객체에서의 같은 자료형이라하면??
-상속관게에 있는 객체는 서로 같은자료형으로 간주한다!!
즉, 상속관계에 있다면 서로 형변환이 가능하다

-----------------------------------------------------------

짝끼리 했던 실습 - 서로 .class를 교환하고
사용해보려 했으나, 불가능했다!

남이 만든 기계어는 , 그 만든 사람이 설명서를 제공하지
않는다면 절대 사용 불가능!!!

개발 시 API 문서에 근거하여 개발하자는 취지..

javadoc 명령을 수행하면 html문서 포맷으로
API 문서를 생성해준다!!!
(밑에처럼 별표를 하나 더달면...)
/**설명서에 표기되는 주석*/

-----------------------------------------------------------

sun에서 javaSE기반의 수많은 선물(API 객체들)을 이미
제공해주고 있다..

이 API 객체들의 위치는?
파일명은.. rt.jar(Java ARchive)
-->.class로 되어있기 때문에 도저히 사용법을 알 수 없으므로..
sun의 홈페이지에서 API document 를 참조했다..

☆★API 를 처음부터 잘 독해 해버릇 하는 것이 중요하다
문서를 읽는 법을 선생님한테 잘 배워서 터득하자!!

-------------------------------------------------------------
String 클래스 (개발 시 압도적)

String a=""; //new 연산자 없이 
		  //너무나 많이 사용되므로,
		  //일반 데이터처럼 사용됨..
주의!! a는 엄연히 레퍼런스 변수다!!
==는 사실상 주소값 비교

String 객체를 메모리에 올리는 2가지 방법~
String은 잘못쓰면 데이터를 너무 많이 잡아먹는다!!!

1.
String str = ""; //implicit(암시적,묵시적 생성법)
		      //Constant Pool (상수풀)에 올라간다
		      //기존에 있으면, 중복해서 올라가지 않는다..
2.
String str2=new String("korea");//explicit(명시적생성법)

------------------------------복습끝----------------------------

1교시

오늘 아침에는 String 객체에서 하지 못한것 제외된것 더하기

오늘 날짜 새로운 프로젝트 패키지 생성

1. project0320 - src , bin 생성
2.bin 까지의 경로 환경변수 - classpath 에 추가
(항상 나자신을 뜻하는 .; 은 맨앞에두고 추가해야한다..)

은닉화, 캡슐화 ()
- 멤버변수는 private 접근을 막고, 이 변수에 대한
사용방법은 getter/setter 에 제공하는 클래스 정의기법 
왜?! 데이터는 소중하니깐!!

2교시

추상클래스에 대해 배워보자!

상속관계를 통해 기능을 강제화시키기 위한 것이며,
단 하나라도 추상메서드를 가진 클래스를 가리켜
추상클래스라 한다!!

이 추상메서드를 상속하게 하므로, 강제화 시킨다..

상속하게 되면, 부모측에서는 강제화 시킨 메서드 안에서
어떤 로직을 짜게 될지 모르므로.. 로직은 미리 넣을수가 없다

3교시

추상클래스 문제풀이 

수정자에 대해서도 배워보자
static : 클래스변수, 클래스메서드를 선언하기 위한 수정자
abstract : 클레스에 붙히면 = 추상클래스
			   메서드에 붙히면 = 추상메서드
			    변수에 붙히면 = 에러 (변수는 브레이스(바디)가 없으므로!!)
final : 마지막.. 
		 변수에 붙히면 = 더이상 값을 변경시킬 수 없다
		 메서드에 붙히면 = 자식이 더이상 *오버라이딩* 금지(업그레이드불가)
		 클래스에 붙히면 = 상속금지(그 집안의 종료)

#수정자끼리의 순서는 상관없다!! 
(수정자)+반환여부+메서드명

#상수 : 일반용어: 항상 그 값이 고정된 값
	전산용어: 프로그램 시작부터 끝까지 그 값이 변하지 않으면서
	고정되는 값(숫자 외에도) = final 를 처음부터 작성하면..

#자바에서는 "다중상속"이 불가능하다..
  현실은 "다중상속적"이다.. 
  ex) 핸드폰 으로 노래 크게 들으면 음악 꺼! (행위) 
  ex) 영희아빠처럼 놀이공원 가고싶다 (행위)

#interface 

자바언어는 다중상속을 원칙적으로 금지하고 있다
하지만, 우리의 현실은 오히려 다중상속적 특징이 더 많다.. 
이러한 문제를 해결하기 위해 지원되는 객체가 바로 "인터페이스"인데, 
인터페이스는 클래스는 아니면서, 메서드 만을 보유한 객체이다.
"인터페이스"는 추상클래스와 마찬가지로, 추상메서드를 가지고 있으며, 
특히 인터페이스가 가진 메서드는 모두 추상메서드이다.
인터페이스가 추상클래스보다 더 추상적이다!!!

결론: 클래스가 아니므로, 다중상속을 피해갈 수 있다...
어차피 모두 추상메서드인걸 아니깐.. abstract 를 안붙혀도된다!!

**extends도 implements 도 is a 관계이다!!!!

abstract 와 interface 의 차이
는 abstract 는 상속을 통해 이루어지고,
interface 는 implement 를 통해 이루어지고..

interface는 클래스가 아니다

----------------------------------------------------------------

오후 1교시

gui 패키지 생성 및 클래스 생성

API 들어가서 Frame 찾기
1. packages 에서 All classes 선택
class 에서 Frame 찾기

java.awt.Frame; 찾음 import 에 위치 추가

Frame frame=new Frame();
컴파일해서 실행하면 cmd 에 아무것도 나오지않음
프레임은 디폴트로 보이지 않는 속성가짐
따라서 보이게 처리하자!!

API 들어가서 나오게 처리하는 메서드 찾음
setVisible(true/false);

나온 창의 크기를 조정하는 메서드 찾음
setSize(w,h);

창의 제목을 설정하는 메서드 찾음
setTitle("String");

버튼을 만들어보자
import java.awt.FlowLayout;
import java.awt.Button;

Button bt; //객체라서 default 값은 null
//메모리 올린다고 하면 생성자보기!!
bt=new Button("버튼value값");

만든 버튼을 만들기만 했지 붙이지 않았으니 붙여보자!!
frame.add(bt);
프레임에 붙히자 버튼을

텍스트 입력박스 생성 
import java.awt.TextField;

TextField txt=new TextField(20);
				(글자칸수)
frame.add(txt);


API 잘 보는 법

난생 처음보는 객체에 대한 대처법

자바의 모든 객체는 결국 일반,추상,인터페이스 중 하나이다.
따라서, 처음보는 객체라 할지라도 결국 메모리에
올려서 사용하라고 준것 이기 때문에..
셋 중 어느 케이스에 속하는지 먼저 조사한 후 
그 객체에 맞게 메모리에 올리자!!
1) 일반 - new 하자
2) 추상 - 자식을 new 하자
3) 인터페이스 - implements 한 자식을 new 하자

근데, 내 경험상 2,3번은 꼭 자식들을 new 하지 않더라도
생성하는 방법을 api 에서 제공하는 경우가 더 많다...

윈도우에 배경색상을 주자

import java.awt.Color;
			  총 255
Color c=new Color(r,g,b);
frame.setBackground(c);

---------------------------------------------------------

3교시

GridLayout 에서 선택




